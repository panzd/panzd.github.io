<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Paper on panzd</title>
        <link>/tags/paper/</link>
        <description>Recent content in Paper on panzd</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 23 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="/tags/paper/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>拨回1984:看Implementing Remote Procedure Calls如何石破天惊?</title>
        <link>/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/</link>
        <pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate>
        
        <guid>/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/</guid>
        <description>&lt;h2 id=&#34;前言&#34;&gt;前言:&lt;/h2&gt;
&lt;p&gt;前言：其实，现在理解RPC的概念较为简单，但在一个概念在走向成熟的过程中的探索，是值得我们追寻与思考的。要追本溯源，是因为历史总与我们的现在遥遥相和，History doesnot repeat, but it rhymes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/1.png&#34;
	width=&#34;837&#34;
	height=&#34;1190&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/1_hu2ee4ec36f9ee5d9a87977d32a5cfe505_606913_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/1_hu2ee4ec36f9ee5d9a87977d32a5cfe505_606913_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图1:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;168px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;文章的岁数比我大，来自《ACM Transactions on Computer Systems, Vol. 2, No. 1, February 1984》，是在1976年的前人提出概念上的拓展，最后形成的就是RPC规范，可以说是远程调用的实行的起点，一个真正的开启。&lt;/p&gt;
&lt;p&gt;Remote procedure calls (RPC) appear to be a useful paradig m for providing communication across a network between programs written in a high-level language.&lt;/p&gt;
&lt;p&gt;Background不谈了，那时候一切都是刚开始。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/2.png&#34;
	width=&#34;897&#34;
	height=&#34;1266&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/2_hu6111bb09c69bb1c4206e25a3ddb17c6c_808998_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/2_hu6111bb09c69bb1c4206e25a3ddb17c6c_808998_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图2:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;170px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;环境也不谈了，和现在相差很大，但需要理解PUP协议的内容，应为接下来，会谈到很多次。&lt;/p&gt;
&lt;p&gt;The PUP family of protocols provides uniform access to any computer onthis internetwork. Previous PUP protocols include simple unreliable (but high-probability) datagram service, and reliable flow-controlled byte streams.&lt;/p&gt;
&lt;h4 id=&#34;aims&#34;&gt;Aims&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/3.png&#34;
	width=&#34;764&#34;
	height=&#34;1121&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/3_hu283983beb60fcd079cdf6912815e24ee_666214_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/3_hu283983beb60fcd079cdf6912815e24ee_666214_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图3:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;68&#34;
		data-flex-basis=&#34;163px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;RPC的初衷就是让分布式计算更加方便。在此之前，困难重重，机器、网络、协议、传输路径等等，有点像是带着导航的&amp;quot;漂流瓶&amp;quot;。&lt;/p&gt;
&lt;p&gt;RPC will, we hope, remove unnecessary difficulties, leaving only the fundamental difficulties of building distributed systems: timing, inde-&lt;/p&gt;
&lt;p&gt;pendent failure of components, and the coexistence of independent execution environments.&lt;/p&gt;
&lt;p&gt;主要有两个目标，减少困难和避免失败。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/4.png&#34;
	width=&#34;774&#34;
	height=&#34;1094&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/4_hu8a92472d7e2c4711d4ea4fcf5205b6ac_699583_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/4_hu8a92472d7e2c4711d4ea4fcf5205b6ac_699583_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图4:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;70&#34;
		data-flex-basis=&#34;169px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;An important issue in design is resolving the tension between powerful semantics and efficiency.&lt;/p&gt;
&lt;p&gt;虽然当时的主流语言Mesa已经没人记住，但数据结构的规范和响应与返回流程，留了下来。以GRPC协议栈为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/5.png&#34;
	width=&#34;457&#34;
	height=&#34;347&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/5_hu11d4a4b79304bcc485066818459eedae_91843_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/5_hu11d4a4b79304bcc485066818459eedae_91843_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图5:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;316px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们可以看到基础设计被沿用了下来，没有使用远程调用最开始的共享地址空间的方式，因为它会产生undue upheaval，主要是因为进程的竞争，会有峰谷值的差异，这会在网络环境中开销加大。We discarded the possibility of emulating some form of shared address space among the computers.&lt;/p&gt;
&lt;p&gt;可以看到TCP和Sockets同为协议栈的基石。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/6.png&#34;
	width=&#34;732&#34;
	height=&#34;1098&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/6_hucd7ac5c2ef712a94ca0f6a7f7fa1a858_729493_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/6_hucd7ac5c2ef712a94ca0f6a7f7fa1a858_729493_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图6:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;160px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;structure&#34;&gt;Structure&lt;/h4&gt;
&lt;p&gt;它的结构是与 Nelson的论文是相似的，包含五个部分，the user, the user-stub, the RPC communications package (known as RPCRuntime), the server-stub, and the server.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/7.png&#34;
	width=&#34;748&#34;
	height=&#34;363&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/7_hua5bd4f17b5fec3bb503dd17cf9f0077b_34143_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/7_hua5bd4f17b5fec3bb503dd17cf9f0077b_34143_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图7:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;206&#34;
		data-flex-basis=&#34;494px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;其实现在很容易理解，只是RPCRuntime有了稍许变化，On receipt of these packets, the RPCRuntime in the callee machine passes them to the server-stub.更多是作为Cedar system的标准部分，RPCRuntime is responsible for packet-level communications.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/8.png&#34;
	width=&#34;849&#34;
	height=&#34;907&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/8_hu9b4ce56210d7a325d9708654d7841002_546439_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/8_hu9b4ce56210d7a325d9708654d7841002_546439_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图8:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;93&#34;
		data-flex-basis=&#34;224px&#34;
	
&gt;&lt;/p&gt;
&lt;h5 id=&#34;naming&#34;&gt;Naming&lt;/h5&gt;
&lt;p&gt;The binding operation offered by our RPC package is to bind an importer of an interface to an exporter of an interface. After binding, calls made by the importer invoke procedures implemented by the (remote) exporter. 基本上一个接口由它的类型和接口值组成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/9.png&#34;
	width=&#34;834&#34;
	height=&#34;1250&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/9_hu53c392a3ee19b715c92c8f4ca463f9e2_792836_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/9_hu53c392a3ee19b715c92c8f4ca463f9e2_792836_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图9:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;160px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里加载出口主要是用分布式数据库的角度，就分为个人和组织两种入口。&lt;/p&gt;
&lt;p&gt;Grapevine distributed database的思想还是留了下来，one for each type and one for each instance.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/10.png&#34;
	width=&#34;855&#34;
	height=&#34;1263&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/10_hu8c9dacf4b2100ff8119a92d1baea0ca2_842439_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/10_hu8c9dacf4b2100ff8119a92d1baea0ca2_842439_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图10:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;162px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这段比较有意思，主要是讲述了RPCRuntime中的Exportlnterface和Importlnterface。就是分离了编辑机制和绑定机制。These are the basis of the Mesa (and Cedar) separate compilation and binding mechanism.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/11.png&#34;
	width=&#34;883&#34;
	height=&#34;1262&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/11_huf67d560dbabf28bac3bf837b2ffc07e4_461512_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/11_huf67d560dbabf28bac3bf837b2ffc07e4_461512_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图11:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;69&#34;
		data-flex-basis=&#34;167px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;When the RPCRuntime on the callee machine receivesa new call packet it uses the index to look up its table of current exports(efficiently), verifies that the unique identifier in the packet matches that in thetable, and passes the call packet to the dispatcher procedure specified in the table.它其实是维护了一个表进行查询匹配。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/12.png&#34;
	width=&#34;895&#34;
	height=&#34;1286&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/12_hu9a068c7bda9e6d4fda51f510971019be_803965_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/12_hu9a068c7bda9e6d4fda51f510971019be_803965_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图12:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;69&#34;
		data-flex-basis=&#34;167px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;他的探讨非常谦虚，讲述了这种模式的重要影响。我们都知道为了避免过多crash发生。Finally, note that this scheme allows calls to be made only on procedures that have been explicitly exported through the RPC mechanism.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/13.png&#34;
	width=&#34;835&#34;
	height=&#34;1267&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/13_hu3441bc07023580e513acfca060819156_721848_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/13_hu3441bc07023580e513acfca060819156_721848_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图13:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;158px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/14.png&#34;
	width=&#34;872&#34;
	height=&#34;1293&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/14_hubb07bbfeac7dd1ba844449c4589a609d_718935_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/14_hubb07bbfeac7dd1ba844449c4589a609d_718935_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图14:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;161px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;However,the result of a call is sufficient acknowledgment that the call packet was received,and a call packet is sufficient to acknowledge the result packet of the previous call made by that process.就是传递和返回的包如何定义序列和方式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/15.png&#34;
	width=&#34;863&#34;
	height=&#34;1196&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/15_hu5c5781548f36ded455ef13306a824f74_610316_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/15_hu5c5781548f36ded455ef13306a824f74_610316_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图15:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;173px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;这里比较关键，讲到它是如何进行连接的建立与维护。&lt;/p&gt;
&lt;p&gt;that we rely on the unique identifier we introduced when doing remote binding. Without this identifier we would be unable to detect duplicates if a server crashed and then restarted while a caller was still retransmitting a call packet (not very likely, but just plausible). We are also assuming that the call sequence number from an activity does not repeat even if the calling machine is restarted.&lt;/p&gt;
&lt;p&gt;当链接开始的时候，后端也存储了状态信息的关键数量。我们需要确保远程绑定时的标识是唯一的。并且如何调用方重启，同一个活动的调用序列号并不会重复。这种轻量的连接管理在构建大型分布式系统的时候会变得非常重要。这让调用方能意识到caller如果发生crash或者其他严重的连接失败，就能通知到期待中的用户。&lt;/p&gt;
&lt;p&gt;主要思想就是&lt;!-- raw HTML omitted --&gt;最小化连接的消耗并在服务上维持稳定的状态。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/16.png&#34;
	width=&#34;831&#34;
	height=&#34;1259&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/16_hu7fc958ebcb233b5f1bc049287298af98_759684_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/16_hu7fc958ebcb233b5f1bc049287298af98_759684_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图16:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;66&#34;
		data-flex-basis=&#34;158px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;下面展示了复杂调用的过程。当涉及到多个数据体或者包的时候，如何维持多个会话的连接反应。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/17.png&#34;
	width=&#34;850&#34;
	height=&#34;1264&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/17_hu2c7d75626a8bbd50ba654e92d68b6bf2_484301_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/17_hu2c7d75626a8bbd50ba654e92d68b6bf2_484301_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图17:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;67&#34;
		data-flex-basis=&#34;161px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;exception-handling&#34;&gt;Exception Handling&lt;/h4&gt;
&lt;p&gt;关于异常的处理。Our RPC package faithfully emulates this mechanism.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/18.png&#34;
	width=&#34;832&#34;
	height=&#34;1262&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/18_hu724102012a1ebf109c123e7a38925965_701591_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/18_hu724102012a1ebf109c123e7a38925965_701591_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图18:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;158px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/19.png&#34;
	width=&#34;811&#34;
	height=&#34;1231&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/19_hu356cc739e6529dfecbfa0a09a1f48525_765174_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/19_hu356cc739e6529dfecbfa0a09a1f48525_765174_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图19:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;65&#34;
		data-flex-basis=&#34;158px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;The first step in reducing cost is maintaining in each machine a stock of idle server processes willing to handle incoming packets. 关于懒连接该如何处理。&lt;/p&gt;
&lt;h4 id=&#34;关于安全&#34;&gt;关于安全&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/20.png&#34;
	width=&#34;897&#34;
	height=&#34;1206&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/20_hucdc72b2e58044906e4ee476b2c6a4410_666026_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/20_hucdc72b2e58044906e4ee476b2c6a4410_666026_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图20:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;74&#34;
		data-flex-basis=&#34;178px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;它的时间，正确率这类。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/21.png&#34;
	width=&#34;876&#34;
	height=&#34;1224&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/21_hu2ee4a93603ba01d7aeb6bcaff7b871ca_638055_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/21_hu2ee4a93603ba01d7aeb6bcaff7b871ca_638055_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图21:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;71&#34;
		data-flex-basis=&#34;171px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后是状态的讨论。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/22.png&#34;
	width=&#34;883&#34;
	height=&#34;1215&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/22_hub299d4ee11a9a58f9804fc76b6096144_717756_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/22_hub299d4ee11a9a58f9804fc76b6096144_717756_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图22:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;72&#34;
		data-flex-basis=&#34;174px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/23.png&#34;
	width=&#34;844&#34;
	height=&#34;1093&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/23_hub935c3fe147689335a2b57b9ac4dd504_571123_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/23_hub935c3fe147689335a2b57b9ac4dd504_571123_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图23:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;77&#34;
		data-flex-basis=&#34;185px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;我们可以看下，现在主流的gRPC和REST的差别。他们都诞生于同一个思想。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/24.png&#34;
	width=&#34;870&#34;
	height=&#34;399&#34;
	srcset=&#34;/p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/24_hu4c79bd84141293d5ba5258bbcded6ded_107065_480x0_resize_box_3.png 480w, /p/%E6%8B%A8%E5%9B%9E1984%E7%9C%8Bimplementing-remote-procedure-calls%E5%A6%82%E4%BD%95%E7%9F%B3%E7%A0%B4%E5%A4%A9%E6%83%8A/images/24_hu4c79bd84141293d5ba5258bbcded6ded_107065_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;图24:RPC论文&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;218&#34;
		data-flex-basis=&#34;523px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最后，让我们回顾下本文的思想。&lt;/p&gt;
&lt;p&gt;The techniques for managing transport level connections so as to minimize the communication costs and the state that must be maintained by a server are important in our experience of servers dealing with large numbers of users. Our binding semantics are quite powerful, but conceptually simple for a programmer familiar with single machine binding.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;简单而有力量。simple and  powerful.&lt;/p&gt;
&lt;p&gt;这是一个新事物的产生，对世界带来的改变。&lt;/p&gt;
&lt;p&gt;也是指导我们学习和研究的中心思想。&lt;/p&gt;
&lt;p&gt;对世界来说，减枝要比生枝更加有益，也更值得赞扬。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
        </item>
        
    </channel>
</rss>
